"""
–ó–∞–¥–∞–Ω–∏–µ:
–ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –µ–≥–æ –∫ –Ω–∞–±—Ä–∞–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É.

–û–ø–∏—Å–∞–Ω–∏–µ: –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤. –ö–∞–∂–¥—ã–π —Ñ–∏–ª—å—Ç—Ä –∏–∑–º–µ–Ω—è–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–≥–ª–∞—Å–Ω–æ
—Å–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏. –¢–µ–±–µ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –º–µ–Ω—é, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä –∏–∑ –Ω–µ –º–µ–Ω–µ–µ
—Ç—Ä—ë—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –µ–≥–æ –∫ —Ç–µ–∫—Å—Ç—É. –ö–∞–∫–∏–µ —ç—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã, –≤—ã–±–∏—Ä–∞–π —Å–∞–º(–∞)!

–ó–∞–¥–∞—á–∏: –ü—Ä–∏–¥—É–º–∞–π –∏–¥–µ–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –∫ –Ω–∏–º. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ö–†–ò–ß–ê–©–ò–ô –§–ò–õ–¨–¢–† –∏–ª–∏ —à–µ–ø—á—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä.
–ò–ª–∏üôÇ–∂–µüôÇ—Ñ–∏–ª—å—Ç—Ä,üôÇ–∫–æ—Ç–æ—Ä—ã–πüôÇ—Ä–∞–∑–¥–µ–ª—è–µ—ÇüôÇ—Å–ª–æ–≤–∞üôÇ—Å–º–∞–π–ª–∞–º–∏. –£–¥–ò–≤–ò_–Ω–ê—Å! –°–æ–±–µ—Ä–∏ –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã, –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è –≤ –æ–¥–∏–Ω
—Å–ª–æ–≤–∞—Ä—å. –í—ã–≤–µ–¥–∏ –º–µ–Ω—é —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è. –ù–∞–ø–∏—à–∏ —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–∏—Ä–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è
–ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è, –ø–æ–∫–∞ –æ–Ω –Ω–µ —Ä–µ—à–∏—Ç –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –µ–º—É
–æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –∏ —Å–ø—Ä–æ—Å–∏—Ç—å, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –∫ —Ç–µ–∫—Å—Ç—É. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—à–∞–µ—Ç—Å—è,
–ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—Å—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω—ë–Ω –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä, –∏ –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞.
–ê –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–≥–ª–∞—à–∞–µ—Ç—Å—è, –Ω—É–∂–Ω–æ —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑–∞—Ç—å –µ–º—É –º–µ–Ω—é. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç ¬´–í—ã—Ö–æ–¥¬ª,
–ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è."""


def validate(list_values):
    choice = input(language[lang]['input']).lower()
    while choice.lower() not in list_values:
        choice = input(f'{language[lang]['input error']}{list_values}\n{language[lang]['input']}').lower()
    return choice


def validateint(list_values):
    while True:
        try:
            choice = int(input(language[lang]['input']))
        except ValueError:
            print(language[lang]['input error'])
        else:
            if choice in list_values:
                break
            else:
                print(language[lang]['input error'])
    return choice


def caps(txt):
    return txt.upper()


def gost(txt):
    sentences = txt.split('.')
    gosted_sentences = []
    for sentence in sentences:
        gostedd_sentences = sentence.strip().capitalize()
        gosted_sentences.append(gostedd_sentences + '. ')
    done_txt = ''.join(gosted_sentences)
    return done_txt


def fence(txt):
    spl_txt = list(txt.lower())
    k = 0
    new_txt = []
    for letter in spl_txt:
        if k % 2 == 0:
            new_txt.append(letter.upper())
        else:
            new_txt.append(letter)
        k += 1
    done_txt = ''.join(new_txt)
    return done_txt


def ice(txt):
    return txt.replace(' ', 'üç¶', txt.count(' '))


language = {
    'ru': {
        'hi': '–ü—Ä–∏–≤–µ—Ç —Ç—É—Ç —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∫ —Ç–µ–∫—Å—Ç—É –∏ —Ç–µ–º —Å–∞–º—ã–º –µ–≥–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å.',
        'choosing': '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —á—Ç–æ —Ç–µ–±–µ –ø—Ä–∏–≥–ª—è–Ω—É–ª–æ—Å—å.',
        'qw': '–¢—ã —Ö–æ—á–µ—à—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä?',
        'yn': ['–¥–∞', '–Ω–µ—Ç'],
        'input': '–í–≤–æ–¥: ',
        'input error': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ ',
    },
    'en': {
        'hi': 'Hi here you can apply filters to the text and thereby stylize it',
        'choosing': 'Choose from the list what you liked.',
        'qw': 'Do you want this filter?',
        'yn': ['yes', 'no'],
        'input': 'Input: ',
        'input error': 'Please choose from the suggested options ',
    }
}

masks = {
    'masks_en': {
        1: {
            'name': 'CAPS',
            'description': 'Makes all letters BIG',
            'filter': caps
        },
        2: {
            'name': 'GOST',
            'description': 'Everything after the dot gets big. Does everything according to GOST.',
            'filter': gost
        },
        3: {
            'name': 'FeNcE',
            'description': 'WeLl, WhAt cAn i sAy fEnCe',
            'filter': fence
        },
        4: {
            'name': 'Iüç¶Wantüç¶Iceüç¶Cream',
            'description': 'Insteadüç¶ofüç¶spaceüç¶iceüç¶cream',
            'filter': ice
        },
        5: {
            'name': 'Exit',
            'description': 'Exit from program',
            'filter': exit
        }
    },

    'masks_ru': {
        1: {
            'name': '–ö–ê–ü–°',
            'description': '–î–µ–ª–∞–µ—Ç –≤—Å–µ –±—É–∫–≤—ã –ë–û–õ–¨–®–ò–ú–ò',
            'filter': caps
        },
        2: {
            'name': '–ì–û–°–¢',
            'description': '–í—Å–µ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–æ–ª—å—à–∏–º. –î–µ–ª–∞–µ—Ç –≤—Å–µ –ø–æ –ì–û–°–¢—É.',
            'filter': gost
        },
        3: {
            'name': '–ó–∞–ë–æ–†',
            'description': '–ù—É —á–¢–æ —Ç–£—Ç —Å–ö–∞–ó–∞–¢—å –∑–ê–±–û—Ä',
            'filter': fence
        },
        4: {
            'name': '–Øüç¶–•–æ—á—Éüç¶–ú–æ—Ä–æ–∂–µ–Ω–∫—É',
            'description': '–í–º–µ—Å—Ç–æüç¶–ø—Ä–æ–±–µ–ª–∞üç¶–º–æ—Ä–æ–∂–µ–Ω–∫–∞',
            'filter': ice
        },
        5: {
            'name': '–í—ã—Ö–æ–¥',
            'description': '–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã',
            'filter': exit
        }
    }
}

lang = 'en'
print('Hi User! chose language. / –ü—Ä–∏–≤–µ—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! –≤—ã–±–µ—Ä–∏ —è–∑—ã–∫.\n'
      'Ru/En')
lang = validate(['ru', 'en'])
mask_lg = 'masks_' + lang
print(language[lang]['hi'])
while True:
    print(language[lang]['choosing'])
    for option in masks[mask_lg]:
        print(f'{option}) {masks[mask_lg][option]['name']}')
    option = validateint(masks[mask_lg].keys())
    print(f'{masks[mask_lg][option]['name']}\n{masks[mask_lg][option]['description']}', language[lang]['qw'], sep='\n')
    qw = validate(language[lang]['yn'])
    if qw == language[lang]['yn'][0]:
        print(masks[mask_lg][option]['filter'](input(language[lang]['input'])))
